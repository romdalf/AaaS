apiVersion: v1
kind: Namespace
metadata:
  name: myshiny-app
---
apiVersion: v1
kind: Service
metadata:
  name: myshiny-app-db-service
  namespace: myshiny-app
  labels:
    app: myshiny-app-db
    env: prod
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
    app: myshiny-app-db
    env: prod
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: myshiny-app-db
  namespace: myshiny-app
spec:
  selector:
    matchLabels:
      app: myshiny-app-db
      env: prod
  serviceName: myshiny-app-db-service
  replicas: 1
  template:
    metadata:
      labels:
        app: myshiny-app-db
        env: prod
    spec:
      containers:
        - name: myshiny-app-db
          image: postgres
          volumeMounts:
            - name: myshiny-app-db-pvc
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_PASSWORD
              value: mysecretpassword
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
  volumeClaimTemplates:
    - metadata:
        name: myshiny-app-db-pvc
        labels:
          app: myshiny-app-db
          env: prod
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "fast"
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: myshiny-app-fe-service
  namespace: myshiny-app
  labels:
    app: myshiny-app-fe
    env: prod
spec:
  type: NodePort
  ports:
   - port: 80
     nodePort: 8080
  selector:
    app: myshiny-app-fe
    env: prod
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myshiny-app-fe-pvc
  namespace: myshiny-app
  labels:
    app: myshiny-app-fe
    env: prod
spec:
  storageClassName: fast
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myshiny-app-fe
  namespace: myshiny-app
  labels:
    app: myshiny-app-fe
    env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myshiny-app-fe
      env: prod
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: myshiny-app-fe
        env: prod
    spec:
      containers:
        - image: drupal:latest
          name: drupal
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/modules
              subPath: modules
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/profiles
              subPath: profiles
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/themes
              subPath: themes
      volumes:
        - name: myshiny-app-fe-pv
          persistentVolumeClaim:
            claimName: myshiny-app-fe-pvc