---
apiVersion: v1
kind: Service
metadata:
  name: myshiny-app-fe-service
  namespace: myshiny-app
  labels:
    app: myshiny-app-fe
    env: prod
spec:
  type: NodePort
  ports:
   - port: 80
     targetPort: 30080
  selector:
    app: myshiny-app-fe
    env: prod
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: myshiny-app-fe
  namespace: myshiny-app
  annotations:
    backup.velero.io/backup-volumes: myshiny-app-fe-pv
spec:
  selector:
    matchLabels:
      app: myshiny-app-fe
      env: prod
  serviceName: myshiny-app-fe-service
  replicas: 1
  template:
    metadata:
      labels:
        app: myshiny-app-fe
        env: prod
    spec:
      initContainers:
        - name: fix-perms
          image: drupal:latest
          command: ['/bin/bash','-c']
          args: ['/bin/cp -R /var/www/html/sites/ /data/; chown -R www-data:www-data /data/']
          volumeMounts:
            - name: myshiny-app-fe-pv
              mountPath: /data
      containers:
        - name: myshiny-app-fe
          image: drupal:latest
          ports:
            - containerPort: 30080
              name: myshiny-app-fe
          volumeMounts:
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/modules
              subPath: modules
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/profiles
              subPath: profiles
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/themes
              subPath: themes
            - name: myshiny-app-fe-pv
              mountPath: /var/www/html/sites
              subPath: sites
  volumeClaimTemplates:
    - metadata:
        name: myshiny-app-fe-pv
        labels:
          app: myshiny-app-fe
          env: prod
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "fast"
        resources:
          requests:
            storage: 1Gi
